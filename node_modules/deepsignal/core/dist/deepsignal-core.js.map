{"version":3,"file":"deepsignal-core.js","sources":["../src/index.ts"],"sourcesContent":["import { computed, signal, Signal } from \"@preact/signals-core\";\n\nconst proxyToSignals = new WeakMap();\nconst objToProxy = new WeakMap();\nconst arrayToArrayOfSignals = new WeakMap();\nconst ignore = new WeakSet();\nconst objToIterable = new WeakMap();\nconst rg = /^\\$/;\nconst descriptor = Object.getOwnPropertyDescriptor;\nlet peeking = false;\n\nexport const deepSignal = <T extends object>(obj: T): DeepSignal<T> => {\n\tif (!shouldProxy(obj)) throw new Error(\"This object can't be observed.\");\n\tif (!objToProxy.has(obj))\n\t\tobjToProxy.set(obj, createProxy(obj, objectHandlers) as DeepSignal<T>);\n\treturn objToProxy.get(obj);\n};\n\nexport const peek = <\n\tT extends DeepSignalObject<object>,\n\tK extends keyof RevertDeepSignalObject<T>\n>(\n\tobj: T,\n\tkey: K\n): RevertDeepSignal<RevertDeepSignalObject<T>[K]> => {\n\tpeeking = true;\n\tconst value = obj[key];\n\ttry {\n\t\tpeeking = false;\n\t} catch (e) {}\n\treturn value as RevertDeepSignal<RevertDeepSignalObject<T>[K]>;\n};\n\nconst isShallow = Symbol(\"shallow\");\nexport function shallow<T extends object>(obj: T): Shallow<T> {\n\tignore.add(obj);\n\treturn obj as Shallow<T>;\n}\n\nconst createProxy = (target: object, handlers: ProxyHandler<object>) => {\n\tconst proxy = new Proxy(target, handlers);\n\tignore.add(proxy);\n\treturn proxy;\n};\n\nconst throwOnMutation = () => {\n\tthrow new Error(\"Don't mutate the signals directly.\");\n};\n\nconst get =\n\t(isArrayOfSignals: boolean) =>\n\t(target: object, fullKey: string, receiver: object): unknown => {\n\t\tif (peeking) return Reflect.get(target, fullKey, receiver);\n\t\tlet returnSignal = isArrayOfSignals || fullKey[0] === \"$\";\n\t\tif (!isArrayOfSignals && returnSignal && Array.isArray(target)) {\n\t\t\tif (fullKey === \"$\") {\n\t\t\t\tif (!arrayToArrayOfSignals.has(target))\n\t\t\t\t\tarrayToArrayOfSignals.set(target, createProxy(target, arrayHandlers));\n\t\t\t\treturn arrayToArrayOfSignals.get(target);\n\t\t\t}\n\t\t\treturnSignal = fullKey === \"$length\";\n\t\t}\n\t\tif (!proxyToSignals.has(receiver)) proxyToSignals.set(receiver, new Map());\n\t\tconst signals = proxyToSignals.get(receiver);\n\t\tconst key = returnSignal ? fullKey.replace(rg, \"\") : fullKey;\n\t\tif (\n\t\t\t!signals.has(key) &&\n\t\t\ttypeof descriptor(target, key)?.get === \"function\"\n\t\t) {\n\t\t\tsignals.set(\n\t\t\t\tkey,\n\t\t\t\tcomputed(() => Reflect.get(target, key, receiver))\n\t\t\t);\n\t\t} else {\n\t\t\tlet value = Reflect.get(target, key, receiver);\n\t\t\tif (returnSignal && typeof value === \"function\") return;\n\t\t\tif (typeof key === \"symbol\" && wellKnownSymbols.has(key)) return value;\n\t\t\tif (!signals.has(key)) {\n\t\t\t\tif (shouldProxy(value)) {\n\t\t\t\t\tif (!objToProxy.has(value))\n\t\t\t\t\t\tobjToProxy.set(value, createProxy(value, objectHandlers));\n\t\t\t\t\tvalue = objToProxy.get(value);\n\t\t\t\t}\n\t\t\t\tsignals.set(key, signal(value));\n\t\t\t}\n\t\t}\n\t\treturn returnSignal ? signals.get(key) : signals.get(key).value;\n\t};\n\nconst objectHandlers = {\n\tget: get(false),\n\tset(target: object, fullKey: string, val: any, receiver: object): boolean {\n\t\tif (typeof descriptor(target, fullKey)?.set === \"function\")\n\t\t\treturn Reflect.set(target, fullKey, val, receiver);\n\t\tif (!proxyToSignals.has(receiver)) proxyToSignals.set(receiver, new Map());\n\t\tconst signals = proxyToSignals.get(receiver);\n\t\tif (fullKey[0] === \"$\") {\n\t\t\tif (!(val instanceof Signal)) throwOnMutation();\n\t\t\tconst key = fullKey.replace(rg, \"\");\n\t\t\tsignals.set(key, val);\n\t\t\treturn Reflect.set(target, key, val.peek(), receiver);\n\t\t} else {\n\t\t\tlet internal = val;\n\t\t\tif (shouldProxy(val)) {\n\t\t\t\tif (!objToProxy.has(val))\n\t\t\t\t\tobjToProxy.set(val, createProxy(val, objectHandlers));\n\t\t\t\tinternal = objToProxy.get(val);\n\t\t\t}\n\t\t\tconst isNew = !(fullKey in target);\n\t\t\tconst result = Reflect.set(target, fullKey, val, receiver);\n\t\t\tif (!signals.has(fullKey)) signals.set(fullKey, signal(internal));\n\t\t\telse signals.get(fullKey).value = internal;\n\t\t\tif (isNew && objToIterable.has(target)) objToIterable.get(target).value++;\n\t\t\tif (Array.isArray(target) && signals.has(\"length\"))\n\t\t\t\tsignals.get(\"length\").value = target.length;\n\t\t\treturn result;\n\t\t}\n\t},\n\tdeleteProperty(target: object, key: string): boolean {\n\t\tif (key[0] === \"$\") throwOnMutation();\n\t\tconst signals = proxyToSignals.get(objToProxy.get(target));\n\t\tconst result = Reflect.deleteProperty(target, key);\n\t\tif (signals && signals.has(key)) signals.get(key).value = undefined;\n\t\tobjToIterable.has(target) && objToIterable.get(target).value++;\n\t\treturn result;\n\t},\n\townKeys(target: object): (string | symbol)[] {\n\t\tif (!objToIterable.has(target)) objToIterable.set(target, signal(0));\n\t\t(objToIterable as any)._ = objToIterable.get(target).value;\n\t\treturn Reflect.ownKeys(target);\n\t},\n};\n\nconst arrayHandlers = {\n\tget: get(true),\n\tset: throwOnMutation,\n\tdeleteProperty: throwOnMutation,\n};\n\nconst wellKnownSymbols = new Set(\n\tObject.getOwnPropertyNames(Symbol)\n\t\t.map(key => Symbol[key as WellKnownSymbols])\n\t\t.filter(value => typeof value === \"symbol\")\n);\nconst supported = new Set([Object, Array]);\nconst shouldProxy = (val: any): boolean => {\n\tif (typeof val !== \"object\" || val === null) return false;\n\treturn supported.has(val.constructor) && !ignore.has(val);\n};\n\n/** TYPES **/\n\nexport type DeepSignal<T> = T extends Function\n\t? T\n\t: T extends { [isShallow]: true }\n\t? T\n\t: T extends Array<unknown>\n\t? DeepSignalArray<T>\n\t: T extends object\n\t? DeepSignalObject<T>\n\t: T;\n\ntype DeepSignalObject<T extends object> = {\n\t[P in keyof T & string as `$${P}`]?: T[P] extends Function\n\t\t? never\n\t\t: Signal<T[P]>;\n} & {\n\t[P in keyof T]: DeepSignal<T[P]>;\n};\n\n/** @ts-expect-error **/\ninterface DeepArray<T> extends Array<T> {\n\tmap: <U>(\n\t\tcallbackfn: (\n\t\t\tvalue: DeepSignal<T>,\n\t\t\tindex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => U,\n\t\tthisArg?: any\n\t) => U[];\n\tforEach: (\n\t\tcallbackfn: (\n\t\t\tvalue: DeepSignal<T>,\n\t\t\tindex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => void,\n\t\tthisArg?: any\n\t) => void;\n\tconcat(...items: ConcatArray<T>[]): DeepSignalArray<T[]>;\n\tconcat(...items: (T | ConcatArray<T>)[]): DeepSignalArray<T[]>;\n\treverse(): DeepSignalArray<T[]>;\n\tshift(): DeepSignal<T> | undefined;\n\tslice(start?: number, end?: number): DeepSignalArray<T[]>;\n\tsplice(start: number, deleteCount?: number): DeepSignalArray<T[]>;\n\tsplice(\n\t\tstart: number,\n\t\tdeleteCount: number,\n\t\t...items: T[]\n\t): DeepSignalArray<T[]>;\n\tfilter<S extends T>(\n\t\tpredicate: (\n\t\t\tvalue: DeepSignal<T>,\n\t\t\tindex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => value is DeepSignal<S>,\n\t\tthisArg?: any\n\t): DeepSignalArray<S[]>;\n\tfilter(\n\t\tpredicate: (\n\t\t\tvalue: DeepSignal<T>,\n\t\t\tindex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => unknown,\n\t\tthisArg?: any\n\t): DeepSignalArray<T[]>;\n\treduce(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: DeepSignal<T>,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => T\n\t): DeepSignal<T>;\n\treduce(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: DeepSignal<T>,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => DeepSignal<T>,\n\t\tinitialValue: T\n\t): DeepSignal<T>;\n\treduce<U>(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: U,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => U,\n\t\tinitialValue: U\n\t): U;\n\treduceRight(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: DeepSignal<T>,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => T\n\t): DeepSignal<T>;\n\treduceRight(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: DeepSignal<T>,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => DeepSignal<T>,\n\t\tinitialValue: T\n\t): DeepSignal<T>;\n\treduceRight<U>(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: U,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => U,\n\t\tinitialValue: U\n\t): U;\n}\ntype ArrayType<T> = T extends Array<infer I> ? I : T;\ntype DeepSignalArray<T> = DeepArray<ArrayType<T>> & {\n\t[key: number]: DeepSignal<ArrayType<T>>;\n\t$?: { [key: number]: Signal<ArrayType<T>> };\n\t$length?: Signal<number>;\n};\n\nexport type Shallow<T extends object> = T & { [isShallow]: true };\n\nexport declare const useDeepSignal: <T extends object>(obj: T) => DeepSignal<T>;\n\ntype FilterSignals<K> = K extends `$${infer P}` ? never : K;\ntype RevertDeepSignalObject<T> = Pick<T, FilterSignals<keyof T>>;\ntype RevertDeepSignalArray<T> = Omit<T, \"$\" | \"$length\">;\n\nexport type RevertDeepSignal<T> = T extends Array<unknown>\n\t? RevertDeepSignalArray<T>\n\t: T extends object\n\t? RevertDeepSignalObject<T>\n\t: T;\n\ntype WellKnownSymbols =\n\t| \"asyncIterator\"\n\t| \"hasInstance\"\n\t| \"isConcatSpreadable\"\n\t| \"iterator\"\n\t| \"match\"\n\t| \"matchAll\"\n\t| \"replace\"\n\t| \"search\"\n\t| \"species\"\n\t| \"split\"\n\t| \"toPrimitive\"\n\t| \"toStringTag\"\n\t| \"unscopables\";\n"],"names":["signalsCore","require","proxyToSignals","WeakMap","objToProxy","arrayToArrayOfSignals","ignore","WeakSet","objToIterable","rg","descriptor","Object","getOwnPropertyDescriptor","peeking","createProxy","target","handlers","proxy","Proxy","add","throwOnMutation","Error","get","isArrayOfSignals","fullKey","receiver","_descriptor","Reflect","returnSignal","Array","isArray","has","set","arrayHandlers","Map","signals","key","replace","value","wellKnownSymbols","shouldProxy","objectHandlers","signal","computed","val","_descriptor2","Signal","peek","internal","isNew","result","length","deleteProperty","undefined","ownKeys","_","Set","getOwnPropertyNames","Symbol","map","filter","supported","constructor","exports","deepSignal","obj","e","shallow"],"mappings":"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"}